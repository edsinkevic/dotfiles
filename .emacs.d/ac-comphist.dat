((("iteration" .
   [2 0 0 0 0 0 0 0 0])
  ("step" .
   [12 0 0 0])
  ("prev_a" .
   [8 0 0 0 1 0])
  ("double" .
   [0 0 0 0 1 0])
  ("solve_recursion_wprev_utility" .
   [0 0 0 0 0 0 0 0 2 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("solve_for" .
   [0 0 0 0 0 0 0 0 1])
  ("solve_recursion_wprev" .
   [2 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1])
  ("solve_recursion_utility" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("solve_recursion" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("std" .
   [1 0 0])
  ("solve" .
   [2 0 0 0 0])
  ("sum" .
   [4 0 0])
  ("atoi" .
   [2 0 0 0])
  ("printf" .
   [7 0 0 0 0 0])
  ("argc" .
   [2 0 0 0])
  ("argv" .
   [4 0 0 0])
  ("factorial" .
   [5 0 0 0 0 0 0 0 0])
  ("treeMax" .
   [1 0 0 0 0 0 1])
  ("trees" .
   [1 0 0 0 0])
  ("treeSize" .
   [1 0 0 0 0 0 0 1])
  ("toNat" .
   [2 0 0 1 0])
  ("Zero" .
   [3 0 0 0])
  ("PlusOne" .
   [5 0 0 0 0 0 0])
  ("fromNat" .
   [1 0 0 0 0 0 1])
  ("fromList" .
   [1 0 0 0 0 0 0 1])
  ("toList" .
   [2 0 0 0 0 0])
  ("Pair" .
   [3 0 0 0])
  ("Empty" .
   [20 0 0 0 0])
  ("Two" .
   [1 0 0])
  ("OneOrTwo" .
   [1 0 0 0 0 0 0 0])
  ("fromIntegral" .
   [0 0 0 0 0 0 0 0 0 0 1 0])
  ("from" .
   [1 0 0 0])
  ("evil-insert-state-map" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("largestHelper" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("ys" .
   [1 0])
  ("item" .
   [1 0 0 0])
  ("isKeywordChecker" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("landscape" .
   [2 0 0 0 0 0 0 0 1])
  ("jsonMessage" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("str" .
   [1 0 0])
  ("xs" .
   [15 0])
  ("getWall" .
   [2 0 0 0 0 0 0])
  ("jsonMsg" .
   [5 0 0 0 0 0 0])
  ("getBombermans" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("getLandscape" .
   [3 0 0 0 0 1 0 0 0 0 0 0])
  ("Landscape" .
   [11 0 0 0 0 0 0 0 0])
  ("Ghosts" .
   [1 0 0 0 0 0])
  ("Wall" .
   [1 0 0 0])
  ("Bricks" .
   [2 0 0 0 0 0])
  ("Bombermans" .
   [1 0 0 0 0 0 0 0 0 0])
  ("getGhosts" .
   [3 0 0 0 0 0 0 0 0])
  ("isKeyword" .
   [3 0 0 0 0 0 0 0 2])
  ("exampleJson" .
   [0 0 0 0 0 0 1 2 0 0 0])
  ("JsonObject" .
   [1 0 0 0 0 0 0 0 0 0])
  ("value" .
   [3 0 0 0 0])
  ("key" .
   [4 0 0])
  ("pair" .
   [1 0 0 0])
  ("jsonObject" .
   [2 0 0 0 0 0 0 0 0 0])
  ("element" .
   [2 0 0 0 0 0 0])
  ("JsonArray" .
   [1 0 0 0 0 0 0 0 0])
  ("j" .
   [1])
  ("jsonValue" .
   [3 0 0 0 0 0 0 0 0])
  ("json" .
   [1 0 0 0])
  ("sep" .
   [2 0 0])
  ("sepBy" .
   [3 0 0 0 0])
  ("isSpace" .
   [1 0 0 0 1 0 0])
  ("jsonArray" .
   [1 0 0 0 0 0 0 0 0])
  ("jsonString" .
   [1 0 0 0 0 0 0 0 0 0])
  ("charP" .
   [10 0 0 0 0])
  ("jsonNull" .
   [0 0 0 0 0 0 0 1])
  ("Parser" .
   [6 0 0 0 0 0])
  ("JsonString" .
   [1 0 0 0 0 0 0 0 0 0])
  ("JsonValue" .
   [3 0 0 0 0 0 0 0 0])
  ("spanP" .
   [5 0 0 0 0])
  ("stringLiteral" .
   [1 0 0 0 0 0 0 0 0 0 1 0 1])
  ("scores" .
   [2 0 0 0 0 0])
  ("player2" .
   [2 0 0 0 0 0 0])
  ("Map" .
   [1 0 0])
  ("player1" .
   [2 0 0 0 0 0 0])
  ("findWithDefault" .
   [1 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("average" .
   [0 0 0 0 0 1 0])
  ("mapMaybe2" .
   [1 0 0 0 0 0 0 0 1])
  (":config" .
   [0 0 0 0 0 0 1])
  ("addEithers" .
   [0 0 0 0 0 1 0 1 0 0])
  ("right" .
   [1 0 0 0 0])
  ("eitherDiv" .
   [0 0 0 0 0 0 0 1 0])
  ("todo" .
   [3 0 0 1])
  ("isPalindrome" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("interactive-haskell-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("evil-mode" .
   [2 0 0 0 0 0 0 0 0])
  ("remove-hook" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("haskell-interactive-mode" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("palindrome" .
   [0 0 0 0 0 1 0 0 0 0])
  ("first" .
   [3 0 0 0 0])
  ("greet" .
   [1 0 0 0 0])
  ("safeIndex" .
   [2 0 0 0 0 0 0 0 0])
  ("auto-" .
   [0 0 0 0 2])
  ("auto-complete" .
   [1 0 0 0 1 1 0 0 0 0 0 0 1])
  ("my--auto-complete" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":which-key" .
   [0 0 0 0 0 0 1 0 0 0])
  ("use-package" .
   [0 0 0 0 0 0 0 0 0 0 2])
  ("isBricksLength" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("rest" .
   [3 0 0 0])
  ("getBricks" .
   [3 0 0 0 0 0 0 0 1])
  ("getKeyword" .
   [3 0 0 0 0 0 0 0 0 0])
  ("isBricks" .
   [1 0 0 0 0 0 0 0])
  ("isLengthLazy" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("isBombermans" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("connectLandscapes" .
   [0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0])
  ("c" .
   [1])
  ("joinArrays" .
   [5 0 0 0 0 0 0 0 1 0])
  ("x" .
   [2])
  ("oldLandscape" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("newLandscape" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("newLandscapeString" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("InitData" .
   [2 0 0 0 0 0 0 1])
  ("exampleInitData" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("asciiRender" .
   [4 0 0 0 1 0 0 0 0 0 0])
  ("State" .
   [2 0 0 0 0])
  ("width" .
   [6 0 0 0 0])
  ("height" .
   [6 0 0 0 0 0])
  ("a" .
   [1])
  ("asciiRenderHelper" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("accum" .
   [18 0 0 0 0])
  ("col" .
   [5 0 0])
  ("row" .
   [5 0 0])
  ("state" .
   [1 0 0 0 0])
  ("Gates" .
   [2 0 0 0 0])
  ("getGates" .
   [2 0 0 0 0 0 0 0])
  ("ga1" .
   [2 0 0])
  ("ga2" .
   [1 0 0])
  ("BootOptions" .
   [1 0 0 0 0 0 1 3 1 0 0])
  ("var" .
   [2 0 0])
  ("Enum" .
   [1 0 0 0])
  ("typeof" .
   [1 0 0 0 0 0])
  ("bootValues" .
   [0 0 0 0 0 0 0 1 0 0])
  ("boot" .
   [4 0 0 0])
  ("smartparens" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("getNextList" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("toNatHelper" .
   [0 0 0 0 0 0 0 3 0 0 0])
  ("prettyPrint" .
   [1 0 0 0 0 0 4 0 0 0 0])
  ("fromBinHelper" .
   [0 0 0 0 0 0 0 1 0 0 0 1 2])
  ("End" .
   [11 0 1])
  ("current" .
   [13 0 0 0 0 0 0])
  ("toBinHelper" .
   [5 0 0 0 0 0 0 0 0 0 0])
  ("otherwise" .
   [0 0 0 0 0 1 0 0 0])
  ("toBin" .
   [2 0 0 0 0])
  ("prettyPrintHelper" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("end" .
   [1 0 0])
  ("Bin" .
   [1 0 0])
  ("reverseBin" .
   [13 0 0 0 0 0 0 0 0 1])
  ("condition" .
   [4 0 0 0 0 0 0 0 0])
  ("allValues" .
   [1 0 0 0 0 0 1 0 0])
  ("mapTree" .
   [3 0 0 0 0 0 0])
  ("Node" .
   [13 0 0 0])
  ("cull" .
   [3 0 0 0])
  ("val" .
   [6 0 0])
  ("isOrdered" .
   [4 0 0 0 0 0 0 0 0])
  ("root" .
   [9 0 0 0])
  ("isOrderedHelper" .
   [7 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("walk" .
   [4 0 0 0])
  ("StepL" .
   [2 0 0 0 0])
  ("StepR" .
   [3 0 0 0 0])
  ("set" .
   [5 0 0])
  ("Step" .
   [1 0 0 0])))
